[{"/Users/kkim/Development/space-apps/mars-weather/src/App.tsx":"1","/Users/kkim/Development/space-apps/mars-weather/src/index.tsx":"2","/Users/kkim/Development/space-apps/mars-weather/src/reportWebVitals.ts":"3","/Users/kkim/Development/space-apps/mars-weather/src/utils/interfaces.ts":"4","/Users/kkim/Development/space-apps/mars-weather/src/utils/useMarsAPIHook.ts":"5","/Users/kkim/Development/space-apps/mars-weather/src/components/WeatherCard.tsx":"6"},{"size":493,"mtime":1613415830303,"results":"7","hashOfConfig":"8"},{"size":500,"mtime":1611927835125,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1611927835125,"results":"10","hashOfConfig":"8"},{"size":322,"mtime":1613190339181,"results":"11","hashOfConfig":"8"},{"size":1021,"mtime":1613414875592,"results":"12","hashOfConfig":"8"},{"size":385,"mtime":1613416120239,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1vigr4n",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kkim/Development/space-apps/mars-weather/src/App.tsx",[],[],"/Users/kkim/Development/space-apps/mars-weather/src/index.tsx",[],"/Users/kkim/Development/space-apps/mars-weather/src/reportWebVitals.ts",["29"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/kkim/Development/space-apps/mars-weather/src/utils/interfaces.ts",[],"/Users/kkim/Development/space-apps/mars-weather/src/utils/useMarsAPIHook.ts",["30","31"],"\nimport { MarsDataList} from './interfaces';\nimport {useState, useEffect} from 'react';\n\n\n//Custom Hooks, and API Parser Helper File\nconst parseData = (request:any): MarsDataList => {\n    const parsedData : MarsDataList = request.sol_keys.map((sol_key: number) => {\n        return {\n            ...request[sol_key],\n            sol: sol_key\n        }\n    });\n    return parsedData;\n}\n\nconst getMarsData = async (): Promise <MarsDataList>=> {\n    const marsApiResponse: Response = await fetch('https://api.nasa.gov/insight_weather/?api_key=DEMO_KEY&feedtype=json&ver=1.0');\n    const response = await marsApiResponse.json();\n    console.log(response);\n    const parsedData:MarsDataList = parseData(response);\n    console.log(parsedData);\n    return parsedData;\n}\n\nexport default function useMarsAPI(): Array<any> {\n    const [marsData, setMarsData] = useState<MarsDataList | null> (null);\n    useEffect(() => {\n        getMarsData().then((res:MarsDataList) => setMarsData(res));\n      }, []);\n\n      return [marsData];\n}\n\n","/Users/kkim/Development/space-apps/mars-weather/src/components/WeatherCard.tsx",[],{"ruleId":"32","severity":1,"message":"33","line":3,"column":25,"nodeType":"34","messageId":"35","endLine":3,"endColumn":57},{"ruleId":"36","severity":1,"message":"37","line":7,"column":28,"nodeType":"38","messageId":"39","endLine":7,"endColumn":31,"suggestions":"40"},{"ruleId":"36","severity":1,"message":"37","line":26,"column":45,"nodeType":"38","messageId":"39","endLine":26,"endColumn":48,"suggestions":"41"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["42","43"],["44","45"],{"messageId":"46","fix":"47","desc":"48"},{"messageId":"49","fix":"50","desc":"51"},{"messageId":"46","fix":"52","desc":"48"},{"messageId":"49","fix":"53","desc":"51"},"suggestUnknown",{"range":"54","text":"55"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"54","text":"56"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"57","text":"55"},{"range":"57","text":"56"},[160,163],"unknown","never",[807,810]]